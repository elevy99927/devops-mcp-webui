[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "k8s-mcp-server"
version = "1.3.0"
description = "MCP Server for Kubernetes CLI tools (kubectl, istioctl, helm, argocd)"
readme = "README.md"
requires-python = ">=3.13"
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "mcp",
    "pydantic>=2.0.0",
    "psutil>=5.9.0",
    "pyyaml>=6.0.0",
]

[project.optional-dependencies]
dev = [
    "ruff",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 160
target-version = ['py313']

[tool.ruff]
line-length = 160
target-version = 'py313'

[tool.ruff.lint]
select = ["E", "F", "W", "I", "N", "UP", "B", "A"]
ignore = []

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
# Skip integration tests by default, run with coverage
addopts = "-m 'not integration' --cov=k8s_mcp_server"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
markers = [
    "integration: marks tests as integration tests requiring a Kubernetes cluster",
    "unit: marks tests as unit tests not requiring external dependencies"
]
